video  

date
mkdir contabilidad
ls 
cd contabilidad
touch presupuesto{1..100}.txt
ls
clear
rsync -arv contabilidad 2024-2369@192.168.100.141:/home/2024-2369/


ls 
cd contabilidad


cd contabilidad
vi rsync.sh

#!/bin/bash
rsync -arv contabilidad 2024-2369@192.168.100.141:/home/2024-2369/

:wq

sudo chmod +x rsync.sh

crontab -e

* * * * * /home/2024-2369/contabilidad/rsync.sh
:wq

ls
touch lista_de_pagos{1..10}
ls


ls  rm -rf *
ls
ls
ls
ls
ls
ls
ls
ls
ls


touch es_s_no_h.txt

ls  
date




















video 3  

date
sudo dnf install keepalived
systemctl enable keepalived 
systemctl start keepalived 
systemctl restart keepalived
cd /etc/keepalived/
ls
vi /etc/keepalived.conf


vrrp_instance VI_1 {

state MASTER

interface enp0s3

virtual_router_id 51

priority 100

advert_int 1

authentication {

auth_type PASS

auth_pass 12345

}

virtual_ipaddress {

192.168.100.141

}

:wq

ifconfig

vi /var/www/html/website1/index.html 

<html>
<head>

	<title>SERVER1</title>

</head>
<body>
	<h1>SERVER BACKUP</h1>

</body>
</html>

:wq

clear

cd /etc/keepalived/
ls
vi /etc/keepalived.conf

vrrp_instance VI_1 {

state BACKUP

interface enp0s3

virtual_router_id 51

priority 90

advert_int 1

authentication {

auth_type PASS

auth_pass 12345

}
 
:wq

sudo scp 2024-2369@192.168.100.141:/etc/keepalived/keepalived.conf  .

systemctl enable keepalived 
systemctl start keepalived 
systemctl restart keepalived

clear 

date 



 Practica 1

sudo yum install openssh-server
ssh-keygen -t rsa
ssh-copy-id francisco@10.0.0.13
sudo yum install rsync
sudo mkdir carpeta20241878
cd carpeta20241878
sudo touch ejemplos{1..10}
rsync -avz /home/joancuevas/carpeta20241878 francisco@10.0.0.13:/home/francisco
sudo nano ejemplos99
"SINCRONIZACION EXITOSA"
cd /
sudo nano sincronizacion.sh 
"#!/bin/bash
rsync -avz /home/joancuevas/carpeta20241878 francisco@10.0.0.13:/home/francisco"
sudo chmod +x sincronizacion.sh
sudo chown joancuevas:joancuevas sincronizacion.sh
crontab -e 
"* * * * * /sincronizacion.sh"

-----------------------------------------------------------
Practica 2

sudo yum install keepalived
sudo nano /etc/keepalived/keepalived.conf

vrrp_instance VI_1 {
    state MASTER
    interface ens160
    virtual_router_id 51
    priority 100
    advert_int 1
    garp_master_delay 1
    garp_master_refresh 5
    authentication {
        auth_type PASS
        auth_pass llll
    }
    virtual_ipaddress {
        10.0.0.32
    }

segundo server 

vrrp_instance VI_1 {
    state BACKUP
    interface ens160
    virtual_router_id 51
    priority 90
    advert_int 1
    garp_master_delay 1
    garp_master_refresh 5
    authentication {
        auth_type PASS
        auth_pass llll
    }
    virtual_ipaddress {
        10.0.0.32
    }

maquina host: ping 10.0.0.32
nodo principal: reboot

-----------------------------------------------------------------------------
PRACTICA 3:

sudo yum install httpd
sudo systemctl start httpd
sudo systemctl enable httpd

sudo mkdir /var/www/html/servidor/
cd /var/www/html/servidor/
sudo nano index.html
"<h1>Servidor 1</h1>"
"<h2>Joan</h2>"
sudo chown -R apache:apache /var/www/html/servidor
sudo chmod -R 755 /var/www/html/servidor

sudo nano /etc/httpd/conf.d/servidor.conf

<VirtualHost *:80>
    ServerName servidor.local
    DocumentRoot "/var/www/html/servidor"

    <Directory "/var/www/html/Servidor">
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>

sudo systemctl restart httpd


sudo yum install keepalived
sudo nano /etc/keepalived/keepalived.conf


vrrp_instance VI_1 {
    state MASTER
    interface ens160
    virtual_router_id 51
    priority 100
    advert_int 1
    garp_master_delay 1
    garp_master_refresh 5
    authentication {
        auth_type PASS
        auth_pass llll
    }
    virtual_ipaddress {
        10.0.0.100/24
    }



servidor 2

sudo yum install httpd
sudo systemctl start httpd
sudo systemctl enable httpd

sudo mkdir /var/www/html/servidor/
cd /var/www/html/servidor/
sudo nano index.html
"<h1>Servidor 2</h1>"
"<h2>Francisco</h2>"
sudo chown -R apache:apache /var/www/html/servidor
sudo chmod -R 755 /var/www/html/servidor

sudo nano /etc/httpd/conf.d/servidor.conf

<VirtualHost *:80>
    ServerName servidor.local
    DocumentRoot "/var/www/html/servidor"

    <Directory "/var/www/html/Servidor">
        AllowOverride All
        Require all granted
    </Directory>
</VirtualHost>

sudo systemctl restart httpd

sudo yum install keepalived
sudo nano /etc/keepalived/keepalived.conf



vrrp_instance VI_1 {
    state BACKUP
    interface ens160
    virtual_router_id 51
    priority 90
    advert_int 1
    garp_master_delay 1
    garp_master_refresh 5
    authentication {
        auth_type PASS
        auth_pass llll
    }
    virtual_ipaddress {
        10.0.0.32
    }

INSTALACIÓN Y CONFIGURACIÓN DE PACEMAKER EN ORACLE LINUX 9 (OL9)
=================================================================

NODO 1: 10.0.0.11
NODO 2: 10.0.0.14
USUARIO DEL CLÚSTER: hacluster
CONTRASEÑA: 12345 (puedes cambiarla si lo deseas)

-----------------------------------------------------------------
1) INSTALAR LOS PAQUETES (EN AMBOS NODOS)
-----------------------------------------------------------------
sudo dnf --enablerepo=ol9_addons install -y pacemaker pcs fence-agents-ipmilan

-----------------------------------------------------------------
2) HABILITAR E INICIAR EL SERVICIO pcsd (EN AMBOS NODOS)
-----------------------------------------------------------------
sudo systemctl enable --now pcsd

-----------------------------------------------------------------
3) CONFIGURAR FIREWALL (EN AMBOS NODOS)
-----------------------------------------------------------------
sudo firewall-cmd --permanent --add-service=high-availability
sudo firewall-cmd --reload

-----------------------------------------------------------------
4) CONFIGURAR USUARIO DEL CLUSTER (EN AMBOS NODOS)
-----------------------------------------------------------------
sudo passwd hacluster
# Asignar la contraseña: 12345

-----------------------------------------------------------------
5) AUTENTICACIÓN ENTRE NODOS (SOLO EN UNO DE LOS NODOS)
-----------------------------------------------------------------
sudo pcs host auth 10.0.0.11 10.0.0.14 -u hacluster -p 12345

-----------------------------------------------------------------
6) CREAR EL CLUSTER (SOLO EN UNO DE LOS NODOS)
-----------------------------------------------------------------
sudo pcs cluster setup micluster 10.0.0.11 10.0.0.14

-----------------------------------------------------------------
7) INICIAR Y HABILITAR EL CLUSTER (SOLO EN UNO DE LOS NODOS)
-----------------------------------------------------------------
sudo pcs cluster start --all
sudo pcs cluster enable --all

-----------------------------------------------------------------
8) VERIFICAR ESTADO DEL CLUSTER
-----------------------------------------------------------------
sudo pcs status

-----------------------------------------------------------------
9) CREAR RECURSO DE IP FLOTANTE (SOLO EN UNO DE LOS NODOS)
-----------------------------------------------------------------
sudo pcs resource create Flotanip ocf:heartbeat:IPaddr2 ip=10.0.0.200 cidr_netmask=24 op monitor interval=30s

-----------------------------------------------------------------
10) CONFIGURAR STONITH PARA PERMITIR RECURSOS CRÍTICOS
-----------------------------------------------------------------
sudo pcs stonith create suicido fence_ipmilan ipaddr=10.0.0.200 login=admin passwd=secret
sudo pcs property set stonith-enabled=true

-----------------------------------------------------------------
11) VERIFICAR ESTADO DE NUEVO
-----------------------------------------------------------------
sudo pcs status

-----------------------------------------------------------------
12) PRUEBA DE PING A LA IP FLOTANTE (DESDE TU MÁQUINA HOST)
-----------------------------------------------------------------
ping 10.0.0.200

-----------------------------------------------------------------
13) REINICIAR UN NODO PARA PROBAR FAILOVER
-----------------------------------------------------------------
sudo reboot
# En el nodo que queda activo:
sudo pcs status

-----------------------------------------------------------------
FIN DEL PROCESO ✅



